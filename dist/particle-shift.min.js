/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("ParticleShift", [], factory);
	else if(typeof exports === 'object')
		exports["ParticleShift"] = factory();
	else
		root["ParticleShift"] = factory();
})(this, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/classes/Body.js":
/*!*****************************!*\
  !*** ./src/classes/Body.js ***!
  \*****************************/
/*! namespace exports */
/*! export Body [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Body\": () => /* binding */ Body\n/* harmony export */ });\nvar Body = {\r\n\r\n\tcreate: function(settings){\r\n\r\n\t\tconst new_body = Object.create(this)\r\n\t\tObject.assign(new_body, settings)\r\n\t\treturn new_body\r\n\r\n\t}\r\n\r\n}\n\n//# sourceURL=webpack://ParticleShift/./src/classes/Body.js?");

/***/ }),

/***/ "./src/classes/Particle.js":
/*!*********************************!*\
  !*** ./src/classes/Particle.js ***!
  \*********************************/
/*! namespace exports */
/*! export Particle [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Particle\": () => /* binding */ Particle\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\nvar Particle = {\r\n\r\n\tcreate: function(scene, settings_array, id){\r\n\r\n\t\tconst new_particle = Object.create(this)\r\n\t\tconst defaults = {\r\n\r\n\t\t\tid,\r\n\r\n\t\t\tx: settings_array[0] + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.random)(scene.spawn_scatter) - (scene.spawn_scatter / 2),\r\n\t\t\ty: settings_array[1] + (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.random)(scene.spawn_scatter) - (scene.spawn_scatter / 2),\r\n\r\n\t\t\tr: settings_array[2][0],\r\n\t\t\tg: settings_array[2][1],\r\n\t\t\tb: settings_array[2][2],\r\n\t\t\ta: settings_array[2][3],\r\n\r\n\t\t\tfinal_x: settings_array[0],\r\n\t\t\tfinal_y: settings_array[1],\r\n\r\n\t\t\tfinal_r: settings_array[2][0],\r\n\t\t\tfinal_g: settings_array[2][1],\r\n\t\t\tfinal_b: settings_array[2][2],\r\n\t\t\tfinal_a: settings_array[2][3],\r\n\r\n\t\t}\r\n\t\tObject.assign(new_particle, defaults)\r\n\t\treturn new_particle\r\n\r\n\t},\r\n\r\n\tdraw: function(scene){\r\n\r\n\t\tscene.ctx.fillStyle = \"rgba(\"+this.r+\",\"+this.g+\",\"+this.b+\",\"+(this.a / 255)+\")\";\r\n\t\t\r\n\t\tif(!scene.particle_type || scene.particle_type == 'rect'){\r\n\t\t\tscene.ctx.fillRect((this.x * scene.draw_multiplier) - (scene.draw_particle_size / 2), (this.y * scene.draw_multiplier) - (scene.draw_particle_size / 2), scene.draw_particle_size, scene.draw_particle_size)\r\n\t    } else if(scene.particle_type == 'circ') {\r\n\t\t    scene.ctx.beginPath();\r\n\t\t    scene.ctx.arc((this.x * scene.draw_multiplier) - (scene.draw_particle_size / 2), (this.y * scene.draw_multiplier)  - (scene.draw_particle_size / 2), scene.draw_particle_size, 0, 2 * Math.PI);\r\n\t\t    scene.ctx.fill();\r\n\t\t}\r\n\t\r\n\t},\r\n\r\n\tupdate: function(scene){\r\n\r\n\t\tconst caller = this\r\n\r\n\t\tconst tick = scene.tick\r\n\t\tconst tick_mod = tick + this.id\r\n\r\n\t\tconst distance = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.line_distance)([this.x, this.y],[this.final_x,this.final_y])\r\n\t\tconst bodies = scene.current_screen.bodies\r\n\r\n\t\tlet pulled = false\r\n\r\n\t\tif(bodies){\r\n\r\n\t\t\tbodies.map(function(body){\r\n\t\t\t\tconst body_distance = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.line_distance)([caller.x, caller.y],[body.x,body.y])\r\n\t\t\t\tif(body_distance < body.radius){\r\n\t\t\t\t\tpulled = true\r\n\t\t\t\t\tconst dt = body.force + (((body.radius - body_distance) / 10) * body.force);\r\n\t\t\t\t\tconst t = dt / body_distance\r\n\t\t\t\t\tcaller.x = ((1 - t) * caller.x + t * body.x)\r\n\t\t\t\t\tcaller.y = ((1 - t) * caller.y + t * body.y)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t}\r\n\r\n\t\tif(!pulled){\r\n\r\n\t\t\tif(distance < 2){\r\n\t\t\t\tthis.x = this.final_x\r\n\t\t\t\tthis.y = this.final_y\r\n\t\t\t} else {\r\n\t\t\t\tconst dt = scene.particle_speed + (distance * scene.particle_speed_distance);\r\n\t\t\t\tconst t = dt / distance\r\n\t\t\t\tthis.x = ((1 - t) * this.x + t * this.final_x) + (Math.sin(tick_mod / 10) * scene.particle_wobble)\r\n\t\t\t\tthis.y = ((1 - t) * this.y + t * this.final_y) + (Math.sin(tick_mod / 10) * scene.particle_wobble)\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t['r','g','b','a'].map(prop => {\r\n\t\t\tif(caller[prop] !== caller['final_'+prop]){\r\n\t\t\t\tconst dir = caller[prop] > caller['final_'+prop]\r\n\t\t\t\tcaller[prop] += (dir ? -1 : 1) * scene.color_shift_speed;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t}\r\n\r\n}\n\n//# sourceURL=webpack://ParticleShift/./src/classes/Particle.js?");

/***/ }),

/***/ "./src/classes/Scene.js":
/*!******************************!*\
  !*** ./src/classes/Scene.js ***!
  \******************************/
/*! namespace exports */
/*! export Scene [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__, __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scene\": () => /* binding */ Scene\n/* harmony export */ });\n/* harmony import */ var _Particle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Particle.js */ \"./src/classes/Particle.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"./src/utils.js\");\n\r\n\r\n\r\nvar Scene = {\r\n\r\n\tcreate: function(settings){\r\n\r\n\t\tconst new_scene = Object.create(this)\r\n\r\n\t\tconst canvas = document.querySelector(settings.selector)\r\n\t\tconst ctx = canvas.getContext('2d')\r\n\r\n\t\tcanvas.width = settings.draw_width\r\n\t\tcanvas.height = settings.draw_height\r\n\r\n\t\tconst defaults = {\r\n\r\n\t\t\tcanvas,\r\n\t\t\tctx,\r\n\r\n\t\t\tparticle_size: 2,\r\n\t\t\tstep_width: 6,\r\n\t\t\tparticle_type: 'rect',\r\n\r\n\t\t\tdraw_width: 1000,\r\n\t\t\tdraw_height: 600,\r\n\t\t\tdraw_multiplier: 1,\r\n\r\n\t\t\tspawn_scatter: 250,\r\n\t\t\tshuffle_spawn: true,\r\n\t\t\tparticle_speed: 1,\r\n\t\t\tparticle_speed_distance: 0.05,\r\n\t\t\tparticle_wobble: 0.2,\r\n\t\t\tcolor_shift_speed: 4,\r\n\r\n\t\t\tshow_fps: false,\r\n\t\t\ttick: 0,\r\n\t\t\tfps: 60,\r\n\t\t\tlast_frame_call: 0,\r\n\t\t\tpre_render_frames_count: false,\r\n\t\t\tpre_render_frames: [],\r\n\r\n\t\t\tactive: false,\r\n\t\t\tcurrent_screen: false,\r\n\r\n\t\t}\r\n\r\n\t\tObject.assign(new_scene, defaults, settings)\r\n\r\n\t\treturn new_scene\r\n\r\n\t},\r\n\r\n\tresize: function(){\r\n\r\n\t\tconst width = this.canvas.getBoundingClientRect().width;\r\n\t\tconst height = Math.ceil(width * (this.draw_height / this.draw_width));\r\n\t\tcanvas.width = width\r\n\t\tcanvas.height = height\r\n\r\n\t\tthis.width = width\r\n\t\tthis.height = height\r\n\r\n\t\tthis.draw_multiplier = width / this.draw_width\r\n\r\n\t},\r\n\tadd_screen: function(screen){\r\n\t\tthis.screens.push(screen)\r\n\t},\r\n\tplay_screen: function(screen){\r\n\t\tconst caller = this\r\n\t\tthis.current_screen = screen\r\n\t\tthis.setup_particles(screen)\r\n\t\tthis.resize()\r\n\t\tif(!this.last_frame_call){\r\n\t\t\tthis.last_frame_call = performance.now()\r\n\t\t}\r\n\t\tif(!this.active){\r\n\t\t\tthis.active = true;\r\n\t\t\twindow.addEventListener(\"resize\", this.resize.bind(this))\r\n\t\t\tthis.draw()\r\n\t\t}\r\n\t},\r\n\r\n\tdraw: function(){\r\n\r\n\t\tconst caller = this\r\n\r\n\t\tthis.tick++\r\n\r\n\t\tthis.ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n\t\tif(this.current_screen.bodies){\r\n\t\t\tthis.current_screen.bodies.forEach(body => {\r\n\t\t\t\tif(body.update) body.update(caller, caller.ctx)\r\n\t\t\t\tif(body.render) body.render(caller, caller.ctx)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.draw_particle_size = this.particle_size * this.draw_multiplier\r\n\r\n\t\tthis.particles.forEach(particle => {\r\n\t\t\tparticle.update(caller)\r\n\t\t\tparticle.draw(caller)\r\n\t\t})\r\n\r\n\t\tif(this.pre_render_frames_count){\r\n\t\t\tthis.pre_render()\r\n\t\t}\r\n\r\n\t\tif(this.show_fps){\r\n\t\t\tthis.draw_fps()\r\n\t\t}\r\n\r\n\t\twindow.requestAnimationFrame(function(){\r\n\t\t\tcaller.draw()\r\n\t\t})\r\n\r\n\t},\r\n\r\n\tdraw_fps: function(){\r\n\t\tconst now = performance.now()\r\n\t\tif(this.tick % 20 == 0){\r\n\t\t\tthis.fps = Math.round(1 / ((now - this.last_frame_call) / 1000));\r\n\t\t}\r\n\t\tthis.last_frame_call = now;\r\n\r\n\t\tthis.ctx.fillStyle = 'black';\r\n\t\tthis.ctx.fillRect(0,0,75,25)\r\n\t\tthis.ctx.font = '12px Courier'\r\n\t\tthis.ctx.fillStyle = 'white';\r\n\t\tthis.ctx.fillText('FPS:'+this.fps, 16, 15)\r\n\t},\r\n\r\n\tpre_render: function(){\r\n\t\tthis.pre_render_frames.push(\r\n\t\t\tthis.ctx.getImageData(0,0,this.draw_width,this.draw_height)\r\n\t\t)\r\n\t\tthis.pre_render_frames_count--\r\n\t\tif(this.pre_render_frames_count == 0){\r\n\t\t\tconst pre_render_node = document.createElement('canvas')\r\n\t\t\tconst pre_render_ctx = pre_render_node.getContext('2d')\r\n\t\t\tpre_render_node.width = this.draw_width\r\n\t\t\tpre_render_node.height = this.draw_height * this.pre_render_frames.length\r\n\t\t\tthis.pre_render_frames.forEach((frame, i) => {\r\n\t\t\t\tpre_render_ctx.putImageData(frame, 0, i * this.draw_height)\r\n\t\t\t})\r\n\t\t\tdocument.body.appendChild(pre_render_node)\r\n\t\t}\r\n\t},\r\n\r\n\tparticles: [],\r\n\tsetup_particles: function(screen){\r\n\r\n\t\tconst caller = this\r\n\t\tconst ctx = this.ctx\r\n\r\n\t\tlet new_particles;\r\n\t\tif(this.shuffle_spawn){\r\n\t\t\tnew_particles = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.shuffle)(screen.particles.map((particle, i) => _Particle_js__WEBPACK_IMPORTED_MODULE_0__.Particle.create(caller, particle, i)));\r\n\t\t} else {\r\n\t\t\tnew_particles = screen.particles.map((particle, i) => _Particle_js__WEBPACK_IMPORTED_MODULE_0__.Particle.create(caller, particle, i));\r\n\t\t}\r\n\r\n\t\tif(this.particles.length > 0){\r\n\t\t\tlet diff = this.particles.length - new_particles.length;\r\n\t\t\tnew_particles.map((particle, i) => {\r\n\t\t\t\tif(caller.particles[i]){\r\n\t\t\t\t\t['x','y','r','g','b','a'].map(prop => {\r\n\t\t\t\t\t\tparticle[prop] = caller.particles[i][prop]\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tnew_particles.map((particle, i) => {\r\n\t\t\t\tparticle.a = 0\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.particles = new_particles\r\n\r\n\t}\r\n\r\n}\n\n//# sourceURL=webpack://ParticleShift/./src/classes/Scene.js?");

/***/ }),

/***/ "./src/classes/Screen.js":
/*!*******************************!*\
  !*** ./src/classes/Screen.js ***!
  \*******************************/
/*! namespace exports */
/*! export Screen [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Screen\": () => /* binding */ Screen\n/* harmony export */ });\nvar Screen = {\r\n\r\n\tcreate: function(scene, settings){\r\n\r\n\t\tconst new_screen = Object.create(this)\r\n\r\n\t\tsettings.render(scene, scene.ctx)\r\n\r\n\t\tlet x = 0;\r\n\t\tlet y = 0;\r\n\r\n\t\tlet particles = [];\r\n\t\tlet image = scene.ctx.getImageData(0,0,scene.draw_width,scene.draw_height)\r\n\t\tlet image_data = image.data\r\n\r\n\t\tnew_screen.draw_width = scene.draw_width\r\n\t\tnew_screen.draw_height = scene.draw_height\r\n\r\n\t\tscene.ctx.clearRect(0, 0, scene.draw_width, scene.draw_height);\r\n\r\n\t\twhile(x < scene.draw_width){\r\n\t\t\ty = 0\r\n\t\t\twhile(y < scene.draw_height){\r\n\t\t\t\tlet index = (y * scene.draw_width + x) * 4;\r\n\t\t\t\tif(image_data[index+3] !== 0){\r\n\t\t\t\t\tparticles.push([x, y, [image_data[index],image_data[index+1],image_data[index+2],image_data[index+3]]])\r\n\t\t\t\t}\r\n\t\t\t\ty += scene.step_width\r\n\t\t\t}\r\n\t\t\tx += scene.step_width\r\n\t\t}\r\n\r\n\t\tObject.assign(new_screen, {\r\n\t\t\tsettings,\r\n\t\t\timage,\r\n\t\t\tparticles,\r\n\t\t\tbodies: settings.bodies\r\n\t\t})\r\n\r\n\t\treturn new_screen\r\n\r\n\t},\r\n\r\n\tdebug: function(){\r\n\r\n\t\tconst debug_node = document.createElement('div')\r\n\r\n\t\tconst screen_node = document.createElement('canvas')\r\n\t\tscreen_node.width = this.draw_width\r\n\t\tscreen_node.height = this.draw_height\r\n\r\n\t\tconst screen_node_ctx = screen_node.getContext('2d')\r\n\t\tscreen_node_ctx.putImageData(this.image, 0, 0)\r\n\r\n\t\tconst label = document.createElement('h6')\r\n\t\tlabel.innerHTML = 'Particles: '+this.particles.length\r\n\t\t\r\n\t\tdebug_node.appendChild(label)\r\n\t\tdebug_node.appendChild(screen_node)\r\n\r\n\t\tdocument.body.appendChild(debug_node)\r\n\t}\r\n\r\n}\n\n//# sourceURL=webpack://ParticleShift/./src/classes/Screen.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! namespace exports */
/*! export Body [provided] [maybe used in main (runtime-defined)] [usage prevents renaming] -> ./src/classes/Body.js .Body */
/*! export Scene [provided] [maybe used in main (runtime-defined)] [usage prevents renaming] -> ./src/classes/Scene.js .Scene */
/*! export Screen [provided] [maybe used in main (runtime-defined)] [usage prevents renaming] -> ./src/classes/Screen.js .Screen */
/*! other exports [not provided] [maybe used in main (runtime-defined)] */
/*! runtime requirements: __webpack_require__, __webpack_exports__, __webpack_require__.d, __webpack_require__.r, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Scene\": () => /* reexport safe */ _classes_Scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene,\n/* harmony export */   \"Screen\": () => /* reexport safe */ _classes_Screen_js__WEBPACK_IMPORTED_MODULE_1__.Screen,\n/* harmony export */   \"Body\": () => /* reexport safe */ _classes_Body_js__WEBPACK_IMPORTED_MODULE_2__.Body\n/* harmony export */ });\n/* harmony import */ var _classes_Scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/Scene.js */ \"./src/classes/Scene.js\");\n/* harmony import */ var _classes_Screen_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/Screen.js */ \"./src/classes/Screen.js\");\n/* harmony import */ var _classes_Body_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/Body.js */ \"./src/classes/Body.js\");\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://ParticleShift/./src/index.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! namespace exports */
/*! export line_distance [provided] [no usage info] [missing usage info prevents renaming] */
/*! export random [provided] [no usage info] [missing usage info prevents renaming] */
/*! export shuffle [provided] [no usage info] [missing usage info prevents renaming] */
/*! other exports [not provided] [no usage info] */
/*! runtime requirements: __webpack_require__.r, __webpack_exports__, __webpack_require__.d, __webpack_require__.* */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"line_distance\": () => /* binding */ line_distance,\n/* harmony export */   \"random\": () => /* binding */ random,\n/* harmony export */   \"shuffle\": () => /* binding */ shuffle\n/* harmony export */ });\nfunction line_distance(line_a, line_b){\r\n\tconst a = line_a[0] - line_b[0];\r\n\tconst b = line_a[1] - line_b[1];\r\n\treturn Math.sqrt( a*a + b*b );\r\n}\r\n\r\nfunction random(to){\r\n\treturn Math.floor((Math.random() * to) + 1)\r\n}\r\n\r\nfunction shuffle(array) {\r\n\tvar currentIndex = array.length, temporaryValue, randomIndex;\r\n\twhile (0 !== currentIndex) {\r\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\r\n\t\tcurrentIndex -= 1;\r\n\t\ttemporaryValue = array[currentIndex];\r\n\t\tarray[currentIndex] = array[randomIndex];\r\n\t\tarray[randomIndex] = temporaryValue;\r\n\r\n\t}\r\n\treturn array;\r\n}\n\n//# sourceURL=webpack://ParticleShift/./src/utils.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// module exports must be returned from runtime so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__("./src/index.js");
/******/ })()
;
});